apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "actinia.fullname" . }}
  labels:
{{ include "actinia.labels" . | indent 4 }}
data:
  start.sh: |
    #!/bin/sh

    # TODO: read paths from config
    mkdir -p /actinia_core/grassdb
    mkdir -p /actinia_core/userdata
    mkdir -p /actinia_core/workspace/temp_db
    mkdir -p /actinia_core/workspace/tmp
    mkdir -p /actinia_core/resources

    # copy pgpass from mounted (!) file
    cp /mnt/pgpass/.pgpass $HOME/.pgpass
    chmod 0600 $HOME/.pgpass

    # copy db.login file from mounted (!) file
    cp /mnt/pgpass/.grass7 $HOME/.grass7/dblogin
    chmod 0600 $HOME/.grass7/dblogin

    # copy db.login file to actinia-core tmp location
    mkdir -p /tmp/:/root/.grass7
    cp /root/.grass7/dblogin /tmp/:/root/.grass7/

    # Create default location in mounted (!) directory
    [ ! -d "/actinia_core/grassdb/nc_spm_08" ] && grass -text -e -c 'EPSG:3358' /actinia_core/grassdb/nc_spm_08

    actinia-user create -u actinia-gdi -w actinia-gdi -r superadmin -g superadmin -c 100000000000 -n 1000 -t 31536000
    actinia-user update -u actinia-gdi -w {{ .Values.config.actinia.password }}
    status=$?
    if [ $status -ne 0 ]; then
      echo "Failed to start actinia-user: $status"
      exit $status
    fi

    gunicorn -b 0.0.0.0:8088 -w {{ .Values.config.actinia.workercount }} --access-logfile=- -k gthread actinia_core.main:flask_app
    status=$?
    if [ $status -ne 0 ]; then
      echo "Failed to start actinia_core/main.py: $status"
      exit $status
    fi

  actinia-core-config: |
    [GRASS]
    grass_database = /actinia_core/grassdb
    grass_user_database = /actinia_core/userdata
    grass_tmp_database = /actinia_core/workspace/temp_db
    grass_resource_dir = /actinia_core/resources
    grass_gis_base = /usr/local/grass7
    grass_gis_start_script = /usr/local/bin/grass
    grass_addon_path = /root/.grass7/addons/

    [API]
    plugins = ["actinia_gdi"]
    force_https_urls = True

    [REDIS]
    {{- if .Values.config.redis.host }}
    redis_server_url = {{ .Values.config.redis.host }}
    {{- else }}
    redis_server_url = {{ include "actinia.fullname" . }}-redis-headless
    {{- end }}
    redis_server_port = {{ .Values.config.redis.port }}
    redis_server_pw = {{ .Values.config.redis.password }}
    redis_resource_expire_time = 864000
    worker_logfile = /actinia_core/workspace/tmp/actinia_worker.log

    [LOGGING]
    log_stdout_format = json
    log_level = 1

    [MISC]
    tmp_workdir = /actinia_core/workspace/tmp
    download_cache = /actinia_core/workspace/download_cache
    secret_key = token_signing_key_changeme

  init-data.sh: |-
    #!/bin/bash
    apt-get update -qq
    apt-get install -y -qq wget
    echo "check if sampledata exists"
    FILE=/actinia_core/grassdb/.init
    if [ -f "$FILE" ]; then
      echo "sampledata already exists"
    else
      echo "download basic sampledata"
      CMD="wget -q -O /mnt/download/nc_basic_spm_grass7.tar.gz 'https://grass.osgeo.org/sampledata/north_carolina/nc_basic_spm_grass7.tar.gz'"
      echo $CMD
      eval $CMD
      CMD="cd /actinia_core/grassdb"
      echo $CMD
      eval $CMD
      CMD="tar -zxf /mnt/download/nc_basic_spm_grass7.tar.gz --strip 1 --keep-old-files"
      echo $CMD
      eval $CMD
      echo "download temporal sampledata"
      CMD="wget -q -O nc_spm_mapset_modis2015_2016_lst.zip 'https://grass.osgeo.org/sampledata/north_carolina/nc_spm_mapset_modis2015_2016_lst.zip'"
      echo $CMD
      eval $CMD
      CMD="cd /actinia_core/grassdb"
      echo $CMD
      eval $CMD
      CMD="unzip nc_spm_mapset_modis2015_2016_lst.zip"
      echo $CMD
      eval $CMD
      CMD="touch $FILE"
      echo $CMD
      eval $CMD
    fi
