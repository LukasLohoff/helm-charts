{
  "id": "suitable_areas_reforestation",
  "description": "Imports point and polygon and checks if point is in polygon.",
  "template": {
      "list": [
          {
              "id": "set_region_from_nswe",
              "module": "g.region",
              "inputs": [
                  {
                      "param": "n",
                      "value": "{{ north }}"
                  },
                  {
                      "param": "s",
                      "value": "{{ south }}"
                  },
                  {
                      "param": "w",
                      "value": "{{ west }}"
                  },
                  {
                      "param": "e",
                      "value": "{{ east }}"
                  }
              ]
          },
          {
              "id": "region_to_vector",
              "module": "v.in.region",
              "inputs": [
                  {
                      "param": "output",
                      "value": "region_vect"
                  }
              ]
          },
          {
              "id": "slope_region",
              "module": "g.region",
              "flags": "p",
              "inputs": [
                  {
                      "param": "vector",
                      "value": "region_vect"
                  },
                  {
                      "param": "align",
                      "value": "mangkawuk_extended_slope@mangkawuk"
                  }
              ]
          },
          {
              "id": "slope_ok",
              "module": "r.mapcalc",
              "inputs": [
                  {
                      "param": "expression",
                      "comment": "Here: Float, max slope in degrees",
                      "value": "mangkawuk_extended_slope_ok = if(mangkawuk_extended_slope@mangkawuk <= {{ slope_max_deg }}, 1, null() )"
                  }
              ]
          },
          {
              "id": "ndvi1_region",
              "module": "g.region",
              "flags": "p",
              "inputs": [
                  {
                      "param": "vector",
                      "value": "region_vect"
                  },
                  {
                      "param": "align",
                      "value": "S2_20181120_ndvi@mangkawuk"
                  }
              ]
          },
          {
              "id": "ndvi1_low",
              "module": "r.mapcalc",
              "inputs": [
                  {
                      "param": "expression",
                      "comment": "Here: Float, max NDVI",
                      "value": "S2_20181120_ndvi_low = if(S2_20181120_ndvi@mangkawuk <= {{ ndvi_max }}, 1, null() )"
                  }
              ]
          },
          {
              "id": "ndvi2_region",
              "module": "g.region",
              "flags": "p",
              "inputs": [
                  {
                      "param": "vector",
                      "value": "region_vect"
                  },
                  {
                      "param": "align",
                      "value": "S2_20191021_ndvi@mangkawuk"
                  }
              ]
          },
          {
              "id": "ndvi2_low",
              "module": "r.mapcalc",
              "inputs": [
                  {
                      "param": "expression",
                      "comment": "Here: Float, max NDVI",
                      "value": "S2_20191021_ndvi_low = if(S2_20191021_ndvi@mangkawuk <= {{ ndvi_max }}, 1, null() )"
                  }
              ]
          },
          {
              "id": "r_series",
              "module": "r.series",
              "inputs": [
                  {
                      "param": "input",
                      "value": "mangkawuk_extended_slope_ok,S2_20181120_ndvi_low,S2_20191021_ndvi_low"
                  },
                  {
                      "param": "output",
                      "value": "optimal_areas_ranked_tmp"
                  },
                  {
                      "param": "method",
                      "value": "sum"
                  }
              ]
          },
          {
              "id": "round",
              "module": "r.mapcalc",
              "inputs": [
                  {
                      "param": "expression",
                      "comment": "Here: Name of result output map",
                      "value": "{{ resultmap }} = round(optimal_areas_ranked_tmp)"
                  }
              ]
          },
          {
              "id": "remove",
              "module": "g.remove",
              "flags": "f",
              "inputs": [
                  {
                      "param": "type",
                      "value": "raster"
                  },
                  {
                      "param": "name",
                      "value": "optimal_areas_ranked_tmp"
                  }
              ]
          },
          {
              "id": "remove",
              "module": "g.remove",
              "flags": "f",
              "inputs": [
                  {
                      "param": "type",
                      "value": "vector"
                  },
                  {
                      "param": "name",
                      "value": "region_vect"
                  }
              ]
          },
          {
              "id": "r_null",
              "module": "r.null",
              "inputs": [
                  {
                      "param": "map",
                      "comment": "Here: Name of result output map",
                      "value": "{{ resultmap }}"
                  },
                  {
                      "param": "null",
                      "value": "0"
                  }
              ]
          },
          {
              "id": "r_colors",
              "module": "r.colors",
              "inputs": [
                  {
                      "param": "map",
                      "comment": "Here: Name of result output map",
                      "value": "{{ resultmap }}"
                  },
                  {
                      "param": "rules",
                      "value": "/src/start/grass/pot_suitable_areas.colors"
                  }
              ]
          },
          {
              "id": "r_category",
              "module": "r.category",
              "inputs": [
                  {
                      "param": "map",
                      "comment": "Here: Name of result output map",
                      "value": "{{ resultmap }}"
                  },
                  {
                      "param": "rules",
                      "value": "/src/start/grass/pot_suitable_areas.cat"
                  },
                  {
                      "param": "separator",
                      "value": ":"
                  }
              ]
          }
      ],
      "version": "1"
  }
}
